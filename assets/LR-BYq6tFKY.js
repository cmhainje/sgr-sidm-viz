import{S as I,P as B,W as E,B as b,b as x,a as C,c as k,A as P,V as A,O as _,G,T as R}from"./lil-gui.esm-D_7FSpI2.js";function L(){var a=128,t=document.createElement("canvas");t.width=a,t.height=a;var n=t.getContext("2d"),c=a/2,g=a/2,l=a/2;n.beginPath(),n.arc(c,g,l,0,2*Math.PI,!1),n.closePath(),n.fillStyle="#FFFFFF",n.fill();const z=new R(t);return z.needsUpdate=!0,z}const v=L();class y{constructor(t,n){this.path=t,this.pt=n,this.snapshots=[],this.currentIndex=0,this.geometry=new b,this.material=new k({color:16777215,size:.4,opacity:1,transparent:!1,map:v,blending:P,depthTest:!1}),this.mesh=new C(this.geometry,this.material),this.isInitialized=!1,this.playing=!1,this.playbackSpeed=1,this.currentTime=0,this.frameTime=1/30,this.alpha=0,this.snapshotBuffer=null}async loadSnapshot(t){if(this.snapshotBuffer===null)return console.error("trying to load snapshot before snapshotBuffer is read"),null;const n=16+t*this.snapshotSize;return new Float32Array(this.snapshotBuffer,n,this.pointsPerSnapshot*3)}updatePointCloud(t){this.geometry.setAttribute("position",new x(t,3)),this.geometry.attributes.position.needsUpdate=!0}async seekToFrame(t){t=Math.min(t,this.maxSnap),this.currentIndex=t,this.currentTime=this.currentIndex*this.frameTime,this.currentSnapshot=await this.loadSnapshot(t),this.nextSnapshot=await this.loadSnapshot(Math.min(t+1,this.maxSnap)),this.updatePointCloud(this.currentSnapshot)}async interpolatePositions(t,n,c){const g=new Float32Array(t.length);for(let l=0;l<t.length;l++)g[l]=t[l]+(n[l]-t[l])*c;return g}async initialize(){this.snapshotBuffer=await(await fetch(`/sgr-sidm-viz/${this.path}`)).arrayBuffer();const t=new DataView(this.snapshotBuffer,0,16);this.maxSnap=t.getUint32(0,!0)-1,this.pointsPerSnapshot=t.getUint32(4,!0),this.bytesPerPoint=t.getUint32(8,!0),this.snapshotSize=this.pointsPerSnapshot*this.bytesPerPoint;const n=await this.loadSnapshot(0);return n&&(this.updatePointCloud(n),this.isInitialized=!0),this.isInitialized}async animate(t){if(!this.isInitialized||!this.playing)return;if(!e.playing){this.playing=e.playing;return}this.currentTime+=t*this.playbackSpeed;const n=Math.floor(this.currentTime/this.frameTime);if(this.alpha=this.currentTime%this.frameTime/this.frameTime,n!==this.currentIndex){if(this.currentIndex=n,e.frame=n,this.currentIndex>=this.maxSnap){this.currentIndex=this.maxSnap,this.playing=!1;return}this.currentSnapshot=await this.loadSnapshot(this.currentIndex);const c=Math.min(this.currentIndex+1,this.maxSnap);this.nextSnapshot=await this.loadSnapshot(c)}if(this.currentSnapshot&&this.nextSnapshot){const c=await this.interpolatePositions(this.currentSnapshot,this.nextSnapshot,this.currentIndex===this.maxSnap?0:this.alpha);this.updatePointCloud(c)}}}const m=new I,U=window.innerWidth/window.innerHeight,u=new B(75,U,.1,1e3),h=new E({antialias:!0});h.setSize(window.innerWidth,window.innerHeight);h.setPixelRatio(window.devicePixelRatio);document.body.appendChild(h.domElement);const W=await(await fetch("/sgr-sidm-viz/data/mw_disk.bin")).arrayBuffer(),H=new Float32Array(W),F=new b;F.setAttribute("position",new x(H,3));const V=new C(F,new k({color:16777215,size:.1,opacity:.4,transparent:!0,map:v,blending:P,depthTest:!1}));m.add(V);const M=new b,$=new Float32Array([-8,0,0]);M.setAttribute("position",new x($,3));const O=new C(M,new k({color:16691788,size:2,opacity:1,transparent:!1,map:v,blending:P,depthTest:!1}));m.add(O);const i=new y("data/cdm_lr_star.bin","star");m.add(i.mesh);const o=new y("data/cdm_lr_dark.bin","dark");m.add(o.mesh);const s=new y("data/sidm_lr_star.bin","star");m.add(s.mesh);const d=new y("data/sidm_lr_dark.bin","dark");m.add(d.mesh);u.position.y=-200;u.up=new A(0,0,1);const p=new _(u,h.domElement);p.enableDamping=!0;p.dampingFactor=.05;p.screenSpacePanning=!1;p.minDistance=1;p.maxDistance=300;p.saveState();const e={model:0,stars:!0,darkMatter:!1,playing:!1,frame:0,speed:1,ended:!1,particleSize:.4,cdmStarColor:"#66ccee",cdmDarkColor:"#ee6677",sidmStarColor:"#ccbb44",sidmDarkColor:"#aa3377",play:()=>{e.ended&&(e.frame=0,i.seekToFrame(0),o.seekToFrame(0),s.seekToFrame(0),d.seekToFrame(0),e.ended=!1);const a=!e.playing;e.playing=a,i.playing=a,o.playing=a,s.playing=a,d.playing=a,window.dispatchEvent(new CustomEvent("playchange",{detail:a}))},resetCamera:()=>{p.reset()},resetSettings:()=>{e.playing=!1,window.dispatchEvent(new CustomEvent("playchange",{detail:!1})),i.playing=!1,o.playing=!1,s.playing=!1,d.playing=!1,r.reset()}};i.material.color.set(e.cdmStarColor);o.material.color.set(e.cdmDarkColor);s.material.color.set(e.sidmStarColor);d.material.color.set(e.sidmDarkColor);const r=new G,D=document.createElement("div");D.style="margin: 4px 0; padding: 0 4px;";const T=document.createElement("div");T.className="gui-message";T.innerHTML=`
    <p><b>Low-resolution animation</b></p>
    <p><a href="/sgr-sidm-viz/">Go back to the landing page</a></p>
    <p><a href="/sgr-sidm-viz/high-res-still/">Go to the high-resolution still</a></p>
`;D.append(T);r.$children.prepend(D);const j=r.add(e,"play").name("Play");r.add(e,"speed",.1,5).onChange(a=>{i.playbackSpeed=a,o.playbackSpeed=a,s.playbackSpeed=a,d.playbackSpeed=a}).name("Speed");const w=r.add(e,"frame",0,442).step(1).onChange(a=>{i.seekToFrame(a),o.seekToFrame(a),s.seekToFrame(a),d.seekToFrame(a)}).name("Frame number"),N=r.add(e,"model",{CDM:0,SIDM:1}).name("DM model");r.add(e,"stars").name("Show stars");r.add(e,"darkMatter").name("Show DM");r.add(e,"resetCamera").name("Reset camera");r.add(e,"resetSettings").name("Reset settings");const f=r.addFolder("Colors");f.addColor(e,"cdmStarColor").name("CDM star color");f.addColor(e,"cdmDarkColor").name("CDM DM color");f.addColor(e,"sidmStarColor").name("SIDM star color");f.addColor(e,"sidmDarkColor").name("SIDM DM color");f.close();N.onChange(a=>{switch(a){case 0:w.max(442),w.updateDisplay();break;case 1:w.max(416),w.updateDisplay();break;default:console.error("unknwon model controller value",a)}});window.addEventListener("playchange",a=>{j.name(a.detail?"Pause":"Play")});let S=0;function X(a){const t=(a-S)/1e3;S=a,p.update(),i.mesh.visible=e.model===0&&e.stars,o.mesh.visible=e.model===0&&e.darkMatter,s.mesh.visible=e.model===1&&e.stars,d.mesh.visible=e.model===1&&e.darkMatter,i.animate(t),o.animate(t),s.animate(t),d.animate(t),e.playing&&(e.model===0&&!i.playing||e.model===1&&!s.playing)&&(e.playing=!1,e.ended=!0,window.dispatchEvent(new CustomEvent("playchange",{detail:!1}))),w.updateDisplay(),h.render(m,u)}async function Y(){await Promise.all([i.initialize(),o.initialize(),s.initialize(),d.initialize()]),S=performance.now(),h.setAnimationLoop(X)}await Y();window.addEventListener("resize",()=>{u.aspect=window.innerWidth/window.innerHeight,u.updateProjectionMatrix(),h.setSize(window.innerWidth,window.innerHeight),h.setPixelRatio(window.devicePixelRatio)});
